# server.co
# it's a server

{Config,Log,async} = require "../main"
Q = require \q
http = require \q-http
url = require \url
querystring = require \querystring
vm = require \vm
fs = require \fs
util = require \util

{Router,Errors} = require "./router"
{Loader} = require "../mvc/loader"
{Controller} = require "../mvc/controller"
{FutureStream} = require "./syncstream"

class Timer
	(req)->
		@id="#{req.connection.remoteAddress} #{req.path}"
		@start = new Date
	end: ->
		@finish = new Date
		Log.log @id+": "+(@finish-@start)+"ms"

class exports.Server
	readPost: async (request)->
		if request.method is \POST then
			body = request.body.read.sync request.body
			querystring.parse body
		else {}
	serve: (request,response)->
		time = new Timer request
		# request's finished, do our thing
		get = url.parse request.url,true .query
		post = FutureStream this,request.header."content-length" .out!

		<~ @contPr.then
		{action,params} = @router.route request
		
		data = post.then (res)->
			res <<< get <<< params

		body: action data
		status: 200
		onclose: time.~end
	
	(port,host)->
		@router = new Router
		@controllers = new Loader do
			Config.controllerPath,
			Controller.~prepare
		@contPr = @controllers.traverse!
		@server = http.Server @~serve
		Log.log "listening on %s:#port",(host or "*")
		@server.listen port,host