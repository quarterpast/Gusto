# server.co
# it's a server

{Config,Log,async} = require "../main"
Q = require \q
http = require \q-http
url = require \url
querystring = require \querystring
vm = require \vm
fs = require \fs
util = require \util

{Router,Errors} = require "./router"
{Loader} = require "../mvc/loader"
{Controller} = require "../mvc/controller"
{FutureStream} = require "./syncstream"

class Timer
	(req)->
		@id="#{req.connection.remoteAddress} #{req.path}"
		@start = new Date
	end: ->
		@finish = new Date
		Log.log @id+": "+(@finish-@start)+"ms"

class exports.Server
	serve: (request,response)->
		time = new Timer request
		# request's finished, do our thing
		get = url.parse request.url,true .query
		post = if request.method is \POST and request.header."content-length" then
			FutureStream this,request.header."content-length" .out!
		else {}

		{action,params} = @router.route request
		
		data = post <<< get <<< params

		body: action
		status: 200
		onclose: time.~end
	
	(port,host)-> Sync ->
		@router = new Router
		Loader Config.controllerPath

		@server = http.Server @~serve
		Log.log "listening on %s:#port",(host or "*")
		@server.listen port,host