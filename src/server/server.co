# server.co
# it's a server
Q = require \q
http = require \q-http
url = require \url
querystring = require \querystring
vm = require \vm
fs = require \fs
util = require \util
Sync = require \sync

{Router,NotFound} = require "./router"
{Loader} = require "../mvc/loader"
{Log} = require "../log"
{async,SyncPromise} = require "../magic"

class Timer
	(req)->
		@id="#{req.connection.remoteAddress} #{req.path}"
		@start = new Date
	end: ->
		@finish = new Date
		Log.log @id+": "+(@finish-@start)+"ms"

class exports.Server
	serve: (request)->
		time = new Timer request
		try
			get = url.parse request.url,true .query
			post = if request.method is \POST and request.headers."content-length" then
				querystring.parse SyncPromise request.body.read!
			else {}
			request <<< {get,post}
			found = false
			for route of Router.route request
				if route not instanceof NotFound
					found = true
					{action,params} = route
					break
			return status: 404,onclose: time.~end unless found

			res = action params
		catch
			Log.error e
			res = body: [e.message] status: 500
		finally
			{
				headers: "content-type":"text/html"
				status: 200
				onclose: time.~end
			} <<< if \forEach in res then
				body: res
			else res
	->
		@server = http.Server @~serve
	listen: (port,host)->
		Log.log "listening on %s:#port",(host or "*")
		@server.listen port,host