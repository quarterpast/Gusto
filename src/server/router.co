# router.co
{Config} = require "../main"
url = require \url

methods = <[ * HEAD GET POST PUT TRACE DELETE OPTIONS PATCH ]>

class exports@Errors.InvalidMethod extends Error
	-> super "Invalid HTTP method #it"
class exports@Errors.NotFound extends Error
	-> super "Could not route #it"
class exports@Errors.Generic extends Error
	-> super "Something went wrong somewhere for some reason. Maybe."

class exports.UrlMapper
	->

class exports.Router
	@route = ->

	routes: []
	->
	add: (method,path,action)->
	::[m] = ::add.curry m.toUpperCase! for m of methods

	use: (obj)->
		for own id, func in obj
			@add (func.method or \GET), path, func

exports[m] = -> it <<< {method:m.toUpperCase!} for m of methods