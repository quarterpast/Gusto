# router.co
{Config} = require "../main"
url = require \url

methods = <[ * HEAD GET POST PUT TRACE DELETE OPTIONS PATCH ]>

class exports.NotFound extends Error
	-> super "Could not route #it"

class exports.Route
	(@method or '*',@path,@action)->
		action.toString = action.route = @~reverse
	match: (uri)->
		...
	reverse: (params)->
		...

class exports.Router
	@routers = []
	@route = (req)->
		for router of @routers
			for route of router.routes
				if params = route.match req.url then {route.action,params}
				else new NotFound req.url

	routes: []
	-> ..routers.push @
	add: (method,path,action)->
		@routes.push if method instanceof Route then method
		else new Route method,path,action

	for m of methods
		::[m] = ::add.bind null,m.toUpperCase!

	use: (obj)->
		for own path, func in obj
			@add func.method, path, func

for m of methods
	exports[m] = -> it <<< {method:m.toUpperCase!}