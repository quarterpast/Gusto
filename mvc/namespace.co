class exports.Namespace
	@instances = {}
	glom: ->
		it.id.unshift i for i of @id.inner or @id
	add: (...things)->
		for thing of things then
			if thing instanceof exports.Namespace then
				@[thing.id.0] = thing
				@glom thing
			else
				import thing
				@glom klass for _,klass in thing
		return this
	(id,...things)~>
		@id = new class
			->
				@inner = [id]
			unshift: ->
				for thing of things
					if thing instanceof exports.Namespace then
						thing.id.unshift it
					else klass.id.unshift it for _,klass in thing
				@inner.unshift it
			toString: ->@inner.toString!
			0: id
		kids = {}
		if id in ..instances
			return ..instances[id].add(...things)
		else 
			@add(...things)
			..instances.(id) = this

