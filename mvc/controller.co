util = require \util
pathutil = require \path
#Renderer = require "./renderer.co"
#redirect = require "../server/redirect.co"
#ErrorHandler = require "./error.co"
class exports.Controller
	->
		for k,v in this
			v.id = [k] unless k in exports.Controller.prototype
	@register = (@result)->
	@subclasses = []
	@byId = (id)->
		if id instanceof String then id /= '.'
		act = id.pop!
		@subclasses[id.join '.']@[act]
	@extended = (sub)-> 
		sub.id = if sub.id? then
			if sub.id instanceof String then sub.id / '.'
			else if sub.id instanceof Array then sub.id
			else throw new TypeError "How is '#{sub.id}' an id?"
		else [sub.displayName]

		@subclasses[sub.id.join '.'] = sub
		sub.actions = {}
		for k in new sub
			unless k in Controller.prototype
				sub.actions[k] = sub.prototype~[k]
	renderJSON: ->
		status: 200
		content-type: "application/json"
		body: [JSON.stringify it]
	render: (act, args)->
		[act,args ? {}] = [action,act] unless act instanceof String
		path = if ..base? then pathutil.join base,act else act
