class exports.Controller
	@subclasses = []
	@extended = -> 
		it.id = [it.displayName]
		@subclasses.push it
	render:->

class namespace
	@instances = {}
	glom: ->
		it.id.unshift i for i of @id.inner or @id
	add: (...things)->
		for thing of things then
			if thing instanceof namespace then
				@[thing.id.0] = thing
				@glom thing
			else
				import thing
				@glom klass for _,klass in thing
		return this
	(id,...things)~>
		@id = new class
			->
				@inner = [id]
			unshift: ->
				for thing of things
					if thing instanceof namespace then
						thing.id.unshift it
					else klass.id.unshift it for _,klass in thing
				@inner.unshift it
			toString: ->@inner.toString!
			0: id
		kids = {}
		if id in ..instances
			return ..instances[id].add(...things)
		else 
			@add(...things)
			..instances.(id) = this

namespace \ns,
	Thing: class extends exports.Controller
		index: ->
	namespace \sub,
		News: class extends exports.Controller
			index: ->
				@render hello:\there
		Other: class extends exports.Controller
			index: ->
				@render hello:\there
		namespace \nest,
			Bird: class extends exports.Controller
				index: ->

console.log namespace \ns,
	Whatever: class extends exports.Controller
		->
