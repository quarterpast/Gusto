# renderer.js
# invokes the template engine, sets up inheritance etc.

extentions = require "./template.co"
list = require "./list.co"
{config} = require "../main.co"
fs = require \fs
pathutil = require \path
tmpl = require \tmpl

module.exports = class Renderer extends EventEmitter
	(path,args,action,layout,ajax)->
		resolved = pathutil.join config.appDir,\app,\views,"#{path}.ejs"
		old = path

		err,data <- fs.readFile resolved
		throw err if err

		return @emit \render, data if ajax

		try
			compiled = tmpl.compile data.toString!, resolved
		catch
			console.error "compilation error",e.stack
			return @emit \error,e

		ctx = ^args <<< _:list.controllers, $:extentions <<< {
			action
			layout
			extend: ->path = it
			set: (k,v)->args[k] = v
			get: ->args[it]
			exists: ->it in args
		}

		output <- comp.execute ctx

		if old is not path
			new Renderer path,args,action,output,false
			.on \render ~>
				@emit \render it
			.on \error ~>
				@emit \error, it
		else @emit \render,output