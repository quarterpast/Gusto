exports.include = ->
	this import require it

path = require \path
cluster = require \cluster
os = require \os
util = require \util
require \sugar

Object.extend!

class Logger
	@levels = []
	@setLevel (level)->
		for lvl,i of levels
			log.silent = i<=level for log of lvl

	silent: false
	(@level,@id,@stream=process.stdout)~>
		if ..levels[level]?
			..levels[level].push this
		else
			..levels[level] = [this]
	print: ->
		unless @silent
			@stream.write @id + "\t" + util.format ...

exports.Gusto =
	debug: Logger 0,\DEBUG
	log: Logger 1,\LOG
	warn: Logger 2,\WARN,process.stderr
	error: Logger 3,\ERROR,process.stderr

exports.config = new
	@appDir = process.cwd!
	@routes = path.join @appDir,"conf","routes.conf"
	@controllerPath = path.join @appDir,"app","controllers"

exports.include "./server/server.co"
if cluster.isMaster
	cluster.fork! for p of os.cpus!
else (new exports.Server).go 8001