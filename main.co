exports.include = ->
	this import require it

path = require \path
cluster = require \cluster
os = require \os
util = require \util
require \sugar

Object.extend!

exports.test = 0

class Logger
	@levels = []
	@setLevel = (level)->
		for lvl,i of @levels
			log.silent = i<level for log of lvl

	silent: false
	(@level,@id,@stream=process.stdout)~>
		if ..levels[level]?
			..levels[level].push this
		else
			..levels[level] = [this]
	print: ->
		unless @silent
			@stream.write "#{@id}\t#{process.pid}\t#{util.format ...}\n"


exports.Gusto =
	debug: Logger 0,\DEBUG .~print
	log: Logger 1,\LOG .~print
	warn: Logger 2,\WARN,process.stderr .~print
	error: Logger 3,\ERROR,process.stderr .~print

exports.config = new
	@appDir = process.cwd!
	@routes = path.join @appDir,"conf","routes.conf"
	@controllerPath = path.join @appDir,"app","controllers"
	@logLevel = 1
	@fork = true

Logger.setLevel exports.config.logLevel
{Server} = require "./server/server.co"
if cluster.isMaster and exports.config.fork
	cluster.fork! for p of os.cpus!
else (new Server).go 8001

console.log exports.test